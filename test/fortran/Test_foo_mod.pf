module Test_foo_mod
    use funit
    use iso_c_binding, only: c_ptr, c_loc, c_f_pointer, c_float, c_double
    use kinds, only: r_double, r_kind
    implicit none

contains

    ! Subroutine foo
    ! This subroutine demonstrates a bug that would not cause obs2ioda to crash,
    ! but rather would introduce a potentially subtle numerical error that would
    ! only appear in some calculations. The bug is in the pointer type declaration.
    subroutine foo(a, b)
        real(r_double), target, intent(in) :: a
        real(r_double), intent(out) :: b
        type(c_ptr) :: b_cptr
        !        real(c_double), pointer :: b_pointer ! Corrected code.
        real, pointer :: b_pointer ! Purposeful mistake to illustrate the importance of unit testing.
        b_cptr = c_loc(a)
        call c_f_pointer(b_cptr, b_pointer)
        b = b_pointer
    end subroutine foo

    ! Function acos_foo
    ! This function calculates the arccosine of the input value divided by 10.
    function acos_foo(val)
        real(r_double), intent(in) :: val
        real(r_double) :: acos_foo
        acos_foo = acos(val / 10)
    end function acos_foo

    ! Test subroutine for foo
    ! This test demonstrates the bug in the foo subroutine. It shows that the bug
    ! would not cause obs2ioda to crash, but would introduce a potentially subtle
    ! numerical error that only appears in some calculations.
    @Test
    subroutine test_foo()
        real(r_double) :: a, b, c
        a = 1.3
        call foo(a, b)
        c = acos_foo(b)
        write(*, *) 'Taking the arccosine of b / 10 = ', b / 10, ' gives c = ', c
        call assertEqual(a, b)
    end subroutine test_foo
end module Test_foo_mod