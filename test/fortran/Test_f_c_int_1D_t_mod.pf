module Test_f_c_int_1D_t_mod
    use funit
    use f_c_int_1D_t_mod, only : f_c_int_1D_t
    use kinds, only : i_kind
    implicit none

contains
    @Test
    subroutine Test_f_c_int_1D_t()
        type(f_c_int_1D_t) :: f_c_int_1D_1
        type(f_c_int_1D_t) :: f_c_int_1D_2
        integer(i_kind) :: f_int_1D(3)
        integer :: i

        f_int_1D = [1, 2, 3]
        f_c_int_1D_1%f_int_1D = f_int_1D
        f_c_int_1D_2%n = size(f_c_int_1D_1%f_int_1D)
        call f_c_int_1D_1%to_c()
        f_c_int_1D_2%c_int_1D = f_c_int_1D_1%c_int_1D
        call f_c_int_1D_2%to_f()
        do i = 1, f_c_int_1D_2%n
            call assertEqual(f_int_1D(i), f_c_int_1D_2%f_int_1D(i))
        end do
    end subroutine Test_f_c_int_1D_t

end module Test_f_c_int_1D_t_mod