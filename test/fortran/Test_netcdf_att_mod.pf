module Test_netcdf_att_mod
    use funit
    use netcdf_cxx_mod
    use netcdf_cxx_i_mod
    use Test_netcdf_fixture_t_mod
    implicit none
    @TestCase
    type, extends(Test_netcdf_fixture_t) :: Test_netcdf_att_t
    contains
        procedure :: test_netcdfAtt => test_netcdfAtt
    end type
contains
    @Test
    subroutine test_netcdfAtt(this)
        class(Test_netcdf_att_t), intent(inout) :: this
        integer(c_int) :: netcdfID
        integer(c_int) :: status
        status = netcdfCreate(this%test_att_path, netcdfID)
        call assertEqual(0, status)
        status = netcdfPutAtt(netcdfID, this%test_string_att_name, this%test_string_att_data)
        call assertEqual(0, status)
        status = netcdfAddGroup(netcdfID, this%test_group_name)
        call assertEqual(0, status)
        status = netcdfAddDim(netcdfID, this%test_global_dim_name, this%test_global_dim_len)
        call assertEqual(0, status)
        status = netcdfAddVar(netcdfID, this%test_int_var_name, NC_INT, 1, (/this%test_global_dim_name/), &
                groupName=this%test_group_name)
        status = netcdfPutAtt(netcdfID, this%test_string_att_name, this%test_int_att_data, &
                varName=this%test_int_var_name, groupName=this%test_group_name)
        call assertEqual(0, status)
        status = netcdfClose(netcdfID)
        call assertEqual(0, status)
    end subroutine test_netcdfAtt
end module Test_netcdf_att_mod
