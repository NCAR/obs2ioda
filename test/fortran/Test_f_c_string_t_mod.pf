module Test_f_c_string_t_mod
    use funit
    use iso_c_binding, only: c_ptr, c_f_pointer, c_char, c_null_char
    use f_c_string_t_mod, only: f_c_string_t
    implicit none

contains

    !> Test the conversion between Fortran strings and C-compatible strings.
    !! This test ensures the correctness of the `f_to_c_string` and `c_to_f_string`
    !! subroutines by performing the following steps:
    !! 1. Initialize a Fortran string.
    !! 2. Convert the Fortran string to a C-compatible null-terminated string using `f_to_c_string`.
    !! 3. Convert the C-compatible string back to a Fortran string using `c_to_f_string`.
    !! 4. Compare the original and final Fortran strings to ensure they match.
    !!
    !! The test uses `assertEqual` to validate the round-trip string conversion.
    @Test
    subroutine Test_f_c_string_t()
        !> Input Fortran string to convert to a C-compatible string.
        type(f_c_string_t) :: f_c_string1
        !> Output Fortran string converted back from the C-compatible string.
        type(f_c_string_t) :: f_c_string2

        f_c_string1%f_string = "abc"
        f_c_string2%n = len(f_c_string1%f_string)



        ! Step 2: Convert Fortran string to C-compatible string
        call f_c_string1%to_c()
        f_c_string2%c_string = f_c_string1%c_string
        call f_c_string2%to_f()

        ! Step 4: Validate the round-trip conversion
        call assertEqual(trim(f_c_string1%f_string), trim(f_c_string2%f_string))
    end subroutine Test_f_c_string_t


end module Test_f_c_string_t_mod
